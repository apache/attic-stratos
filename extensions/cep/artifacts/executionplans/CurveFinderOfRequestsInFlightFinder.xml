<?xml version="1.0" encoding="UTF-8"?>
<!--

 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.

-->

<executionPlan name="CurveFinderOfRequestsInFlightFinder"
               statistics="disable" trace="enable" xmlns="http://wso2.org/carbon/eventprocessor">
    <description>This will find the curve of the number of requests in flight over a minute.</description>
    <siddhiConfiguration>
        <property name="siddhi.enable.distributed.processing">false</property>
        <property name="siddhi.persistence.snapshot.time.interval.minutes">0</property>
    </siddhiConfiguration>
    <importedStreams>
        <stream as="curve_finder_rif" name="in_flight_requests" version="1.0.0"/>
    </importedStreams>
    <queryExpressions><![CDATA[
	from curve_finder_rif
		select cluster_id, cluster_instance_id, network_partition_id, in_flight_request_count,
		stratos:concat(cluster_id, '-' ,network_partition_id) as rif_curve_finder_cluster_network
		insert into rif_curve_finder_concat;
	from rif_curve_finder_concat
	    select cluster_id, cluster_instance_id, network_partition_id, in_flight_request_count, rif_curve_finder_cluster_network, 0.0 as a, 0.0 as b, 0.0 as c
	    insert into rif_curve_finder_concat_temp;
	define partition rif_curve_finder_cluster_partition by rif_curve_finder_concat_temp.rif_curve_finder_cluster_network;
	from rif_curve_finder_concat_temp
	    #window.stratos:curveFitting(10 min, in_flight_request_count, a, b, c)
		select cluster_id, cluster_instance_id, network_partition_id,in_flight_request_count as count, a as curve_finder_a, b as curve_finder_b, c as curve_finder_c
		output snapshot every 1 min
		insert into curve_finder_in_flight_requests
		partition by rif_curve_finder_cluster_partition;
  ]]></queryExpressions>
    <exportedStreams>
        <stream name="curve_finder_in_flight_requests"
                valueOf="curve_finder_in_flight_requests" version="1.0.0"/>
    </exportedStreams>
</executionPlan>