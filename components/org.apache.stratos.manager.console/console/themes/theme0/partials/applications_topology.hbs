<div id="centered">
    <div class="row title">
        <div class="title-main text-center">
            <h1>Application Topology - {{appName}}</h1>
        </div>
    </div>

    <div class='container' id='content'>
        <div class='row'>
            <div class='container text-center form-toolbar'>
                <div class='col-md-1'>
                    <button class='btn btn-default btn-lg' type='button' style="margin-left: -15px; "
                            onclick='window.location.replace(document.referrer)'> Back</button>
                </div>
                <div class='col-md-11'>
                    <button class='btn btn-info btn-lg pull-right' type='button' id='refresh' data-form=''>Refresh </button>
                    <a class='btn btn-info btn-lg pull-right' type='button' id='export' data-form=''>Export As PNG </a>
                </div>
            </div>
        </div>
        <div class="left-side">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Legends</h3>
                </div>
                <div class="panel-body">
                    <div class="keys">
                        <div><i class="fa fa-square st-active"></i> Active </div>
                        <div><i class="fa fa-square st-created"></i> Created </div>
                        <div><i class="fa fa-square st-inactive"></i> Inactive </div>
                        <div><i class="fa fa-square st-terminated"></i> Terminated </div>
                        <div><i class="fa fa-square st-other"></i> Other </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="application-topology">

        </div>
        <canvas id="canvasOriginal" height="190" width="190" style="display:none"></canvas>
    </div>

</div>
<script type="text/javascript">
$(document).ready(function () {
    var topologydata = {{{topologyData}}};

    //initial generation with deafult call
    update(genTree(topologydata));

    $('#refresh').click(function(){
        //get ajax call
        $(".application-topology").html('<i class="fa fa-spinner fa-spin fa-4x"></i>');
        var formtype = 'applicationtopology';
        var applicationId = "{{appName}}";

        $.ajax({
            type: "GET",
            url: caramel.context + "/controllers/applications/application_getrequests.jag",
            dataType: 'json',
            data: { "formtype": formtype, "appId":applicationId },
            success: function (data) {
                if (data.status == 'error') {
                    var n = noty({text: data.message, layout: 'bottomRight', type: 'error'});
                    $(".application-topology").html('');
                } else {
                    $(".application-topology").html('');
                    update(genTree(data));
                    //call canvas update event
                    canvg('canvasOriginal', new XMLSerializer().serializeToString(svg));
                }
            }
        })
    });

    //make svg to canvas
    var svg = $('svg')[0];
    var canvasOriginal = $('#canvasOriginal')[0];
    var ctxOriginal = canvasOriginal.getContext('2d');
    // this saves the inline svg to canvas without external css
    canvg('canvasOriginal', new XMLSerializer().serializeToString(svg));
    /**
     * This is the function that will take care of image extracting and
     * setting proper filename for the download.
     * IMPORTANT: Call it from within a onclick event.
     */
    function downloadCanvas(link, canvasId, filename) {
        link.href = document.getElementById(canvasId).toDataURL();
        link.download = filename;
    }

    /**
     * The event handler for the link's onclick event. We give THIS as a
     * parameter (=the link element), ID of the canvas and a filename.
     */
    $('#export').click(function() {
        downloadCanvas(this, 'canvasOriginal', '{{{appName}}}.png');
    });


});
</script>