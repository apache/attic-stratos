<%
/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */
var log = new Log("apachestratos.configure_request"),
        util = require('/controllers/rest/rest_calls.jag'),
        formtype = request.getParameter('formtype'),
        ChartType = request.getParameter('chartType'),
        Duration = request.getParameter('duration'),
        IdValue = request.getParameter('idValue');

var formSubmit;
var DurationVal;

//add login validator for pages
include('/controllers/login/validator.jag');

switch (Duration) {
    case "30Min":
        DurationVal = .5;
        break;
    case "1Hour":
        DurationVal = 1;
        break;
    case "1Day":
        DurationVal = 24;
        break;
    case "1Week":
        DurationVal = 168;
        break;
    case "1Month":
        DurationVal = 672;
        break;
}


try {
    switch (formtype) {

        case "MemoryConsumption":
            if("Cluster" == ChartType){
                formSubmit = util.RESTCalls.getClusterMemoryAverageDetails(IdValue, DurationVal);
                break;
            }
            else{
                formSubmit = util.RESTCalls.getMemberMemoryAvrageDetails(IdValue, DurationVal);
                break;
            }

        case "LoadAverage":
            if("Cluster" == ChartType){
                formSubmit = util.RESTCalls.getClusterLoadAverageDetails(IdValue, DurationVal);
                break;
            }
            else{
                formSubmit = util.RESTCalls.getMemberLoadAverageDetails(IdValue, DurationVal);
                break;
            }

        case "InFlight":
            formSubmit = util.RESTCalls.getFlightRequestDetails(IdValue, DurationVal);
            break;

        default:
            session.put("deploy-status", { "message": "Sorry Endpoint Error", "status": "error" });
    }

    if (formSubmit == undefined)
    {
        print({"status": 'error', "message": "No Data found!"});

    }else{
        print(formSubmit);
    }

} catch (e) {
    log.warn(e);
    print({"status": 'error', "message": e.toString()});
}

%>