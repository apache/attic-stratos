<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://impl.services.controller.cloud.stratos.apache.org" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax228="http://kubernetes.domain.controller.cloud.stratos.apache.org/xsd" xmlns:ax233="http://topology.domain.messaging.stratos.apache.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax222="http://exception.controller.cloud.stratos.apache.org/xsd" xmlns:ax231="http://domain.common.stratos.apache.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax224="http://domain.controller.cloud.stratos.apache.org/xsd" xmlns:ax226="http://common.stratos.apache.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://impl.services.controller.cloud.stratos.apache.org">
    <wsdl:documentation>CloudControllerService</wsdl:documentation>
    <wsdl:types>
        <xs:schema xmlns:ax230="http://kubernetes.domain.controller.cloud.stratos.apache.org/xsd" xmlns:ax223="http://exception.controller.cloud.stratos.apache.org/xsd" xmlns:ax234="http://topology.domain.messaging.stratos.apache.org/xsd" xmlns:ax225="http://domain.controller.cloud.stratos.apache.org/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://impl.services.controller.cloud.stratos.apache.org">
            <xs:import namespace="http://exception.controller.cloud.stratos.apache.org/xsd"></xs:import>
            <xs:import namespace="http://domain.controller.cloud.stratos.apache.org/xsd"></xs:import>
            <xs:import namespace="http://kubernetes.domain.controller.cloud.stratos.apache.org/xsd"></xs:import>
            <xs:import namespace="http://topology.domain.messaging.stratos.apache.org/xsd"></xs:import>
            <xs:element name="CloudControllerServiceDeploymentPolicyNotExistsException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="DeploymentPolicyNotExistsException" nillable="true" type="ax222:DeploymentPolicyNotExistsException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDeploymentPolicy">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="deploymentPolicyID" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDeploymentPolicyResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax224:DeploymentPolicy"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidMemberException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidMemberException" nillable="true" type="ax222:InvalidMemberException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidCartridgeTypeException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidCartridgeTypeException" nillable="true" type="ax222:InvalidCartridgeTypeException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceCloudControllerException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="CloudControllerException" nillable="true" type="ax222:CloudControllerException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="terminateInstance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="memberId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDeploymentPolicies">
                <xs:complexType>
                    <xs:sequence></xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDeploymentPoliciesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax224:DeploymentPolicy"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidCartridgeDefinitionException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidCartridgeDefinitionException" nillable="true" type="ax222:InvalidCartridgeDefinitionException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidIaasProviderException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidIaasProviderException" nillable="true" type="ax222:InvalidIaasProviderException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceCartridgeDefinitionNotExistsException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="CartridgeDefinitionNotExistsException" nillable="true" type="ax222:CartridgeDefinitionNotExistsException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateCartridge">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="cartridgeConfig" nillable="true" type="ax224:CartridgeConfig"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getCartridges">
                <xs:complexType>
                    <xs:sequence></xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getCartridgesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeCartridge">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceNetworkPartitionAlreadyExistsException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="NetworkPartitionAlreadyExistsException" nillable="true" type="ax222:NetworkPartitionAlreadyExistsException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addNetworkPartition">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="networkPartition" nillable="true" type="ax224:NetworkPartition"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getNetworkPartitions">
                <xs:complexType>
                    <xs:sequence></xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getNetworkPartitionsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax224:NetworkPartition"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getNetworkPartition">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="networkPartitionId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getNetworkPartitionResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax224:NetworkPartition"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceNetworkPartitionNotExistsException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="NetworkPartitionNotExistsException" nillable="true" type="ax222:NetworkPartitionNotExistsException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeNetworkPartition">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="networkPartitionId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateNetworkPartition">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="networkPartition" nillable="true" type="ax224:NetworkPartition"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidKubernetesHostException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidKubernetesHostException" nillable="true" type="ax222:InvalidKubernetesHostException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceNonExistingKubernetesClusterException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="NonExistingKubernetesClusterException" nillable="true" type="ax222:NonExistingKubernetesClusterException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addKubernetesHost">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesClusterId" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="kubernetesHost" nillable="true" type="ax228:KubernetesHost"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addKubernetesHostResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidKubernetesMasterException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidKubernetesMasterException" nillable="true" type="ax222:InvalidKubernetesMasterException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceNonExistingKubernetesMasterException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="NonExistingKubernetesMasterException" nillable="true" type="ax222:NonExistingKubernetesMasterException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateKubernetesMaster">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesMaster" nillable="true" type="ax228:KubernetesMaster"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateKubernetesMasterResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceNonExistingKubernetesHostException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="NonExistingKubernetesHostException" nillable="true" type="ax222:NonExistingKubernetesHostException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateKubernetesHost">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesHost" nillable="true" type="ax228:KubernetesHost"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateKubernetesHostResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceCartridgeAlreadyExistsException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="CartridgeAlreadyExistsException" nillable="true" type="ax222:CartridgeAlreadyExistsException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addCartridge">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="cartridgeConfig" nillable="true" type="ax224:CartridgeConfig"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidKubernetesClusterException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidKubernetesClusterException" nillable="true" type="ax222:InvalidKubernetesClusterException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addKubernetesCluster">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesCluster" nillable="true" type="ax228:KubernetesCluster"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addKubernetesClusterResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getKubernetesCluster">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesClusterId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getKubernetesClusterResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax228:KubernetesCluster"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeKubernetesCluster">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesClusterId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeKubernetesClusterResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeKubernetesHost">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesHostId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeKubernetesHostResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceCartridgeNotFoundException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="CartridgeNotFoundException" nillable="true" type="ax222:CartridgeNotFoundException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="startInstance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="instanceContext" nillable="true" type="ax224:InstanceContext"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="startInstanceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax224:MemberContext"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidServiceGroupException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidServiceGroupException" nillable="true" type="ax222:InvalidServiceGroupException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupSubGroups">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupSubGroupsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupCartridges">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupCartridgesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupDependencies">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupDependenciesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax224:Dependencies"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="startInstances">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="instanceContexts" nillable="true" type="ax224:InstanceContext"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="startInstancesResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax224:MemberContext"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidClusterException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidClusterException" nillable="true" type="ax222:InvalidClusterException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="terminateInstances">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getCartridgeInfo">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getCartridgeInfoResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax224:CartridgeInfo"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidPartitionException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidPartitionException" nillable="true" type="ax222:InvalidPartitionException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="validateDeploymentPolicy">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"></xs:element>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="partitions" nillable="true" type="ax224:Partition"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="validateDeploymentPolicyResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="validatePartition">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="partition" nillable="true" type="ax224:Partition"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="validatePartitionResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getClusterContext">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getClusterContextResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax224:ClusterContext"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateClusterStatus">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="instanceId" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="status" nillable="true" type="ax233:ClusterStatus"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceApplicationClusterRegistrationException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="ApplicationClusterRegistrationException" nillable="true" type="ax222:ApplicationClusterRegistrationException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="createApplicationClusters">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="appId" nillable="true" type="xs:string"></xs:element>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="appClustersContexts" nillable="true" type="ax224:ApplicationClusterContext"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceClusterInstanceCreationException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="ClusterInstanceCreationException" nillable="true" type="ax222:ClusterInstanceCreationException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="createClusterInstance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="serviceType" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="instanceId" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="partitionId" nillable="true" type="xs:string"></xs:element>
                        <xs:element minOccurs="0" name="networkPartitionId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getKubernetesClusters">
                <xs:complexType>
                    <xs:sequence></xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getKubernetesClustersResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax228:KubernetesCluster"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getMasterForKubernetesCluster">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesClusterId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getMasterForKubernetesClusterResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax228:KubernetesMaster"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getHostsForKubernetesCluster">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="kubernetesClusterId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getHostsForKubernetesClusterResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax228:KubernetesHost"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceDeploymentPolicyAlreadyExistsException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="DeploymentPolicyAlreadyExistsException" nillable="true" type="ax222:DeploymentPolicyAlreadyExistsException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceInvalidDeploymentPolicyException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="InvalidDeploymentPolicyException" nillable="true" type="ax222:InvalidDeploymentPolicyException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addDeployementPolicy">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="deploymentPolicy" nillable="true" type="ax224:DeploymentPolicy"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="updateDeployementPolicy">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="deploymentPolicy" nillable="true" type="ax224:DeploymentPolicy"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeDeployementPolicy">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="deploymentPolicyID" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addServiceGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="servicegroup" nillable="true" type="ax224:ServiceGroup"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getServiceGroupResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax224:ServiceGroup"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CloudControllerServiceUnregisteredClusterException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="UnregisteredClusterException" nillable="true" type="ax222:UnregisteredClusterException"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="unregisterService">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeServiceGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="registerService">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="registrant" nillable="true" type="ax224:Registrant"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="registerServiceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://topology.domain.messaging.stratos.apache.org/xsd">
            <xs:complexType abstract="true" name="ClusterStatus">
                <xs:complexContent>
                    <xs:extension base="xs:Enum">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="code" type="xs:int"></xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.stratos.apache.org/xsd">
            <xs:complexType name="Properties">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax226:Property"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Property">
                <xs:sequence>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.controller.cloud.stratos.apache.org/xsd">
            <xs:complexType name="DeploymentPolicyNotExistsException">
                <xs:sequence></xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidMemberException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidCartridgeTypeException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CloudControllerException">
                <xs:complexContent>
                    <xs:extension base="xs:RuntimeException">
                        <xs:sequence></xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="InvalidCartridgeDefinitionException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidIaasProviderException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CartridgeDefinitionNotExistsException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NetworkPartitionAlreadyExistsException">
                <xs:sequence></xs:sequence>
            </xs:complexType>
            <xs:complexType name="NetworkPartitionNotExistsException">
                <xs:sequence></xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidKubernetesHostException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NonExistingKubernetesClusterException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidKubernetesMasterException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NonExistingKubernetesMasterException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NonExistingKubernetesHostException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CartridgeAlreadyExistsException">
                <xs:sequence></xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidKubernetesClusterException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CartridgeNotFoundException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidServiceGroupException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidClusterException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidPartitionException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ApplicationClusterRegistrationException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ClusterInstanceCreationException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DeploymentPolicyAlreadyExistsException">
                <xs:sequence></xs:sequence>
            </xs:complexType>
            <xs:complexType name="InvalidDeploymentPolicyException">
                <xs:sequence></xs:sequence>
            </xs:complexType>
            <xs:complexType name="UnregisteredClusterException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://domain.common.stratos.apache.org/xsd">
            <xs:complexType name="NameValuePair">
                <xs:sequence>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:ax229="http://common.stratos.apache.org/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://kubernetes.domain.controller.cloud.stratos.apache.org/xsd">
            <xs:import namespace="http://common.stratos.apache.org/xsd"></xs:import>
            <xs:complexType name="KubernetesHost">
                <xs:sequence>
                    <xs:element minOccurs="0" name="hostId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="hostname" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="privateIPAddress" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                    <xs:element minOccurs="0" name="publicIPAddress" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="KubernetesMaster">
                <xs:complexContent>
                    <xs:extension base="ax228:KubernetesHost">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="endpoint" nillable="true" type="xs:string"></xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="KubernetesCluster">
                <xs:sequence>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="kubernetesHosts" nillable="true" type="ax228:KubernetesHost"></xs:element>
                    <xs:element minOccurs="0" name="kubernetesMaster" nillable="true" type="ax228:KubernetesMaster"></xs:element>
                    <xs:element minOccurs="0" name="portRange" nillable="true" type="ax228:PortRange"></xs:element>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PortRange">
                <xs:sequence>
                    <xs:element minOccurs="0" name="lower" type="xs:int"></xs:element>
                    <xs:element minOccurs="0" name="upper" type="xs:int"></xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xs:schema xmlns:ax232="http://domain.common.stratos.apache.org/xsd" xmlns:ax227="http://common.stratos.apache.org/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://domain.controller.cloud.stratos.apache.org/xsd">
            <xs:import namespace="http://common.stratos.apache.org/xsd"></xs:import>
            <xs:import namespace="http://domain.common.stratos.apache.org/xsd"></xs:import>
            <xs:complexType name="DeploymentPolicy">
                <xs:sequence>
                    <xs:element minOccurs="0" name="deploymentPolicyID" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="networkPartitionsRef" nillable="true" type="ax224:NetworkPartitionRef"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NetworkPartitionRef">
                <xs:sequence>
                    <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="partitionAlgo" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="partitions" nillable="true" type="ax224:PartitionRef"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PartitionRef">
                <xs:sequence>
                    <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="max" type="xs:int"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CartridgeConfig">
                <xs:sequence>
                    <xs:element minOccurs="0" name="baseDir" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="defaultAutoscalingPolicy" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="defaultDeploymentPolicy" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="deployerType" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="deploymentDirs" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="exportingProperties" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="iaasConfigs" nillable="true" type="ax224:IaasConfig"></xs:element>
                    <xs:element minOccurs="0" name="isPublic" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="lbConfig" nillable="true" type="ax224:LoadbalancerConfig"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="metadataKeys" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="multiTenant" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="persistence" nillable="true" type="ax224:Persistence"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="portMappings" nillable="true" type="ax224:PortMapping"></xs:element>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                    <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="serviceGroup" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="tenantPartitions" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="IaasConfig">
                <xs:sequence>
                    <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="credential" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="identity" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="imageId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="networkInterfaces" nillable="true" type="ax224:NetworkInterfaces"></xs:element>
                    <xs:element minOccurs="0" name="payload" nillable="true" type="xs:base64Binary"></xs:element>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                    <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NetworkInterfaces">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="networkInterfaces" nillable="true" type="ax224:NetworkInterface"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NetworkInterface">
                <xs:sequence>
                    <xs:element minOccurs="0" name="fixedIp" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="floatingNetworks" nillable="true" type="ax224:FloatingNetworks"></xs:element>
                    <xs:element minOccurs="0" name="networkUuid" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="portUuid" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="FloatingNetworks">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="floatingNetworks" nillable="true" type="ax224:FloatingNetwork"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="FloatingNetwork">
                <xs:sequence>
                    <xs:element minOccurs="0" name="floatingIP" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="networkUuid" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="LoadbalancerConfig">
                <xs:sequence>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                    <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Persistence">
                <xs:sequence>
                    <xs:element minOccurs="0" name="persistanceRequired" type="xs:boolean"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="volumes" nillable="true" type="ax224:Volume"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Volume">
                <xs:sequence>
                    <xs:element minOccurs="0" name="device" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="iaasType" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="mappingPath" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="removeOntermination" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="size" type="xs:int"></xs:element>
                    <xs:element minOccurs="0" name="snapshotId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="volumeId" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PortMapping">
                <xs:sequence>
                    <xs:element minOccurs="0" name="kubernetesServicePort" type="xs:int"></xs:element>
                    <xs:element minOccurs="0" name="kubernetesServicePortMapping" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="port" type="xs:int"></xs:element>
                    <xs:element minOccurs="0" name="protocol" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="proxyPort" type="xs:int"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NetworkPartition">
                <xs:sequence>
                    <xs:element minOccurs="0" name="activeByDefault" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="kubernetesClusterId" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="partitions" nillable="true" type="ax224:Partition"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Partition">
                <xs:sequence>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="isPublic" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="kubernetesClusterId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                    <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InstanceContext">
                <xs:sequence>
                    <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="clusterInstanceId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="initTime" type="xs:long"></xs:element>
                    <xs:element minOccurs="0" name="networkPartitionId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="obsoleteExpiryTime" type="xs:long"></xs:element>
                    <xs:element minOccurs="0" name="partition" nillable="true" type="ax224:Partition"></xs:element>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="MemberContext">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="allocatedIPs" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="applicationId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="clusterInstanceId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="defaultPrivateIP" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="defaultPublicIP" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="dynamicPayload" nillable="true" type="ax232:NameValuePair"></xs:element>
                    <xs:element minOccurs="0" name="initTime" type="xs:long"></xs:element>
                    <xs:element minOccurs="0" name="instanceId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="instanceMetadata" nillable="true" type="ax224:InstanceMetadata"></xs:element>
                    <xs:element minOccurs="0" name="kubernetesPodId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="kubernetesPodName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="lbClusterId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="memberId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="networkPartitionId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="obsoleteExpiryTime" type="xs:long"></xs:element>
                    <xs:element minOccurs="0" name="obsoleteInitTime" type="xs:long"></xs:element>
                    <xs:element minOccurs="0" name="partition" nillable="true" type="ax224:Partition"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="privateIPs" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="publicIPs" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="InstanceMetadata">
                <xs:sequence>
                    <xs:element minOccurs="0" name="hostname" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="hypervisor" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="imageId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="loginPort" type="xs:int"></xs:element>
                    <xs:element minOccurs="0" name="operatingSystem64bit" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="operatingSystemArchitecture" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="operatingSystemName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="operatingSystemVersion" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="ram" type="xs:int"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Dependencies">
                <xs:sequence>
                    <xs:element minOccurs="0" name="killBehaviour" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="startupOrders" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CartridgeInfo">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="appTypes" nillable="true" type="ax224:AppType"></xs:element>
                    <xs:element minOccurs="0" name="baseDir" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="defaultAutoscalingPolicy" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="defaultDeploymentPolicy" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="deploymentDirs" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="isPublic" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="lbConfig" nillable="true" type="ax224:LoadbalancerConfig"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="metadataKeys" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="multiTenant" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="persistence" nillable="true" type="ax224:Persistence"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="portMappings" nillable="true" type="ax224:PortMapping"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax226:Property"></xs:element>
                    <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="serviceGroup" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="tenantPartitions" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AppType">
                <xs:sequence>
                    <xs:element minOccurs="0" name="appSpecificMapping" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ClusterContext">
                <xs:sequence>
                    <xs:element minOccurs="0" name="applicationId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="kubernetesClusterId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="kubernetesServices" nillable="true" type="xs:anyType"></xs:element>
                    <xs:element minOccurs="0" name="lbCluster" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="payload" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                    <xs:element minOccurs="0" name="timeoutInMillis" type="xs:long"></xs:element>
                    <xs:element minOccurs="0" name="volumeRequired" type="xs:boolean"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="volumes" nillable="true" type="ax224:Volume"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ApplicationClusterContext">
                <xs:sequence>
                    <xs:element minOccurs="0" name="autoscalePolicyName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="dependencyClusterIds" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="deploymentPolicyName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="lbCluster" type="xs:boolean"></xs:element>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                    <xs:element minOccurs="0" name="tenantRange" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="textPayload" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ServiceGroup">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="cartridges" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="dependencies" nillable="true" type="ax224:Dependencies"></xs:element>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"></xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="subGroups" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="Registrant">
                <xs:sequence>
                    <xs:element minOccurs="0" name="autoScalerPolicyName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="cartridgeType" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="clusterId" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="deploymentPolicyName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="payload" nillable="true" type="xs:string"></xs:element>
                    <xs:element minOccurs="0" name="persistence" nillable="true" type="ax224:Persistence"></xs:element>
                    <xs:element minOccurs="0" name="properties" nillable="true" type="ax226:Properties"></xs:element>
                    <xs:element minOccurs="0" name="tenantRange" nillable="true" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="getDeploymentPoliciesRequest">
        <wsdl:part name="parameters" element="ns:getDeploymentPolicies"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getDeploymentPoliciesResponse">
        <wsdl:part name="parameters" element="ns:getDeploymentPoliciesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getCartridgesRequest">
        <wsdl:part name="parameters" element="ns:getCartridges"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getCartridgesResponse">
        <wsdl:part name="parameters" element="ns:getCartridgesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateKubernetesMasterRequest">
        <wsdl:part name="parameters" element="ns:updateKubernetesMaster"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateKubernetesMasterResponse">
        <wsdl:part name="parameters" element="ns:updateKubernetesMasterResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidKubernetesMasterException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidKubernetesMasterException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceNonExistingKubernetesMasterException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceNonExistingKubernetesMasterException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="validatePartitionRequest">
        <wsdl:part name="parameters" element="ns:validatePartition"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="validatePartitionResponse">
        <wsdl:part name="parameters" element="ns:validatePartitionResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidPartitionException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidPartitionException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="createApplicationClustersRequest">
        <wsdl:part name="parameters" element="ns:createApplicationClusters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceApplicationClusterRegistrationException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceApplicationClusterRegistrationException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getDeploymentPolicyRequest">
        <wsdl:part name="parameters" element="ns:getDeploymentPolicy"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getDeploymentPolicyResponse">
        <wsdl:part name="parameters" element="ns:getDeploymentPolicyResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceDeploymentPolicyNotExistsException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceDeploymentPolicyNotExistsException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="removeKubernetesClusterRequest">
        <wsdl:part name="parameters" element="ns:removeKubernetesCluster"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="removeKubernetesClusterResponse">
        <wsdl:part name="parameters" element="ns:removeKubernetesClusterResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceNonExistingKubernetesClusterException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceNonExistingKubernetesClusterException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="validateDeploymentPolicyRequest">
        <wsdl:part name="parameters" element="ns:validateDeploymentPolicy"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="validateDeploymentPolicyResponse">
        <wsdl:part name="parameters" element="ns:validateDeploymentPolicyResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidCartridgeTypeException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidCartridgeTypeException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getServiceGroupCartridgesRequest">
        <wsdl:part name="parameters" element="ns:getServiceGroupCartridges"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getServiceGroupCartridgesResponse">
        <wsdl:part name="parameters" element="ns:getServiceGroupCartridgesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidServiceGroupException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidServiceGroupException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="addKubernetesClusterRequest">
        <wsdl:part name="parameters" element="ns:addKubernetesCluster"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="addKubernetesClusterResponse">
        <wsdl:part name="parameters" element="ns:addKubernetesClusterResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidKubernetesClusterException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidKubernetesClusterException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="registerServiceRequest">
        <wsdl:part name="parameters" element="ns:registerService"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="registerServiceResponse">
        <wsdl:part name="parameters" element="ns:registerServiceResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceCartridgeNotFoundException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceCartridgeNotFoundException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="addServiceGroupRequest">
        <wsdl:part name="parameters" element="ns:addServiceGroup"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="terminateInstanceRequest">
        <wsdl:part name="parameters" element="ns:terminateInstance"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidMemberException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidMemberException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceCloudControllerException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceCloudControllerException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="addDeployementPolicyRequest">
        <wsdl:part name="parameters" element="ns:addDeployementPolicy"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceDeploymentPolicyAlreadyExistsException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceDeploymentPolicyAlreadyExistsException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidDeploymentPolicyException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidDeploymentPolicyException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getServiceGroupDependenciesRequest">
        <wsdl:part name="parameters" element="ns:getServiceGroupDependencies"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getServiceGroupDependenciesResponse">
        <wsdl:part name="parameters" element="ns:getServiceGroupDependenciesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getServiceGroupSubGroupsRequest">
        <wsdl:part name="parameters" element="ns:getServiceGroupSubGroups"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getServiceGroupSubGroupsResponse">
        <wsdl:part name="parameters" element="ns:getServiceGroupSubGroupsResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getServiceGroupRequest">
        <wsdl:part name="parameters" element="ns:getServiceGroup"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getServiceGroupResponse">
        <wsdl:part name="parameters" element="ns:getServiceGroupResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateNetworkPartitionRequest">
        <wsdl:part name="parameters" element="ns:updateNetworkPartition"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceNetworkPartitionNotExistsException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceNetworkPartitionNotExistsException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="removeNetworkPartitionRequest">
        <wsdl:part name="parameters" element="ns:removeNetworkPartition"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getCartridgeInfoRequest">
        <wsdl:part name="parameters" element="ns:getCartridgeInfo"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getCartridgeInfoResponse">
        <wsdl:part name="parameters" element="ns:getCartridgeInfoResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="addKubernetesHostRequest">
        <wsdl:part name="parameters" element="ns:addKubernetesHost"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="addKubernetesHostResponse">
        <wsdl:part name="parameters" element="ns:addKubernetesHostResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidKubernetesHostException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidKubernetesHostException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateDeployementPolicyRequest">
        <wsdl:part name="parameters" element="ns:updateDeployementPolicy"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="removeDeployementPolicyRequest">
        <wsdl:part name="parameters" element="ns:removeDeployementPolicy"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="createClusterInstanceRequest">
        <wsdl:part name="parameters" element="ns:createClusterInstance"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceClusterInstanceCreationException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceClusterInstanceCreationException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="unregisterServiceRequest">
        <wsdl:part name="parameters" element="ns:unregisterService"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceUnregisteredClusterException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceUnregisteredClusterException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getHostsForKubernetesClusterRequest">
        <wsdl:part name="parameters" element="ns:getHostsForKubernetesCluster"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getHostsForKubernetesClusterResponse">
        <wsdl:part name="parameters" element="ns:getHostsForKubernetesClusterResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="removeKubernetesHostRequest">
        <wsdl:part name="parameters" element="ns:removeKubernetesHost"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="removeKubernetesHostResponse">
        <wsdl:part name="parameters" element="ns:removeKubernetesHostResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceNonExistingKubernetesHostException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceNonExistingKubernetesHostException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getKubernetesClustersRequest">
        <wsdl:part name="parameters" element="ns:getKubernetesClusters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getKubernetesClustersResponse">
        <wsdl:part name="parameters" element="ns:getKubernetesClustersResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getMasterForKubernetesClusterRequest">
        <wsdl:part name="parameters" element="ns:getMasterForKubernetesCluster"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getMasterForKubernetesClusterResponse">
        <wsdl:part name="parameters" element="ns:getMasterForKubernetesClusterResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="startInstancesRequest">
        <wsdl:part name="parameters" element="ns:startInstances"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="startInstancesResponse">
        <wsdl:part name="parameters" element="ns:startInstancesResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidIaasProviderException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidIaasProviderException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateCartridgeRequest">
        <wsdl:part name="parameters" element="ns:updateCartridge"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidCartridgeDefinitionException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidCartridgeDefinitionException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceCartridgeDefinitionNotExistsException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceCartridgeDefinitionNotExistsException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="startInstanceRequest">
        <wsdl:part name="parameters" element="ns:startInstance"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="startInstanceResponse">
        <wsdl:part name="parameters" element="ns:startInstanceResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="terminateInstancesRequest">
        <wsdl:part name="parameters" element="ns:terminateInstances"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceInvalidClusterException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceInvalidClusterException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getNetworkPartitionRequest">
        <wsdl:part name="parameters" element="ns:getNetworkPartition"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getNetworkPartitionResponse">
        <wsdl:part name="parameters" element="ns:getNetworkPartitionResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateClusterStatusRequest">
        <wsdl:part name="parameters" element="ns:updateClusterStatus"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getClusterContextRequest">
        <wsdl:part name="parameters" element="ns:getClusterContext"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getClusterContextResponse">
        <wsdl:part name="parameters" element="ns:getClusterContextResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateKubernetesHostRequest">
        <wsdl:part name="parameters" element="ns:updateKubernetesHost"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="updateKubernetesHostResponse">
        <wsdl:part name="parameters" element="ns:updateKubernetesHostResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="removeServiceGroupRequest">
        <wsdl:part name="parameters" element="ns:removeServiceGroup"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="addNetworkPartitionRequest">
        <wsdl:part name="parameters" element="ns:addNetworkPartition"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceNetworkPartitionAlreadyExistsException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceNetworkPartitionAlreadyExistsException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getKubernetesClusterRequest">
        <wsdl:part name="parameters" element="ns:getKubernetesCluster"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getKubernetesClusterResponse">
        <wsdl:part name="parameters" element="ns:getKubernetesClusterResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="removeCartridgeRequest">
        <wsdl:part name="parameters" element="ns:removeCartridge"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="addCartridgeRequest">
        <wsdl:part name="parameters" element="ns:addCartridge"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="CloudControllerServiceCartridgeAlreadyExistsException">
        <wsdl:part name="parameters" element="ns:CloudControllerServiceCartridgeAlreadyExistsException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getNetworkPartitionsRequest">
        <wsdl:part name="parameters" element="ns:getNetworkPartitions"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getNetworkPartitionsResponse">
        <wsdl:part name="parameters" element="ns:getNetworkPartitionsResponse"></wsdl:part>
    </wsdl:message>
    <wsdl:portType name="CloudControllerServicePortType">
        <wsdl:operation name="getDeploymentPolicies">
            <wsdl:input message="ns:getDeploymentPoliciesRequest" wsaw:Action="urn:getDeploymentPolicies"></wsdl:input>
            <wsdl:output message="ns:getDeploymentPoliciesResponse" wsaw:Action="urn:getDeploymentPoliciesResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getCartridges">
            <wsdl:input message="ns:getCartridgesRequest" wsaw:Action="urn:getCartridges"></wsdl:input>
            <wsdl:output message="ns:getCartridgesResponse" wsaw:Action="urn:getCartridgesResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesMaster">
            <wsdl:input message="ns:updateKubernetesMasterRequest" wsaw:Action="urn:updateKubernetesMaster"></wsdl:input>
            <wsdl:output message="ns:updateKubernetesMasterResponse" wsaw:Action="urn:updateKubernetesMasterResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceInvalidKubernetesMasterException" name="CloudControllerServiceInvalidKubernetesMasterException" wsaw:Action="urn:updateKubernetesMasterCloudControllerServiceInvalidKubernetesMasterException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesMasterException" name="CloudControllerServiceNonExistingKubernetesMasterException" wsaw:Action="urn:updateKubernetesMasterCloudControllerServiceNonExistingKubernetesMasterException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validatePartition">
            <wsdl:input message="ns:validatePartitionRequest" wsaw:Action="urn:validatePartition"></wsdl:input>
            <wsdl:output message="ns:validatePartitionResponse" wsaw:Action="urn:validatePartitionResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceInvalidPartitionException" name="CloudControllerServiceInvalidPartitionException" wsaw:Action="urn:validatePartitionCloudControllerServiceInvalidPartitionException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createApplicationClusters">
            <wsdl:input message="ns:createApplicationClustersRequest" wsaw:Action="urn:createApplicationClusters"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceApplicationClusterRegistrationException" name="CloudControllerServiceApplicationClusterRegistrationException" wsaw:Action="urn:createApplicationClustersCloudControllerServiceApplicationClusterRegistrationException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDeploymentPolicy">
            <wsdl:input message="ns:getDeploymentPolicyRequest" wsaw:Action="urn:getDeploymentPolicy"></wsdl:input>
            <wsdl:output message="ns:getDeploymentPolicyResponse" wsaw:Action="urn:getDeploymentPolicyResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceDeploymentPolicyNotExistsException" name="CloudControllerServiceDeploymentPolicyNotExistsException" wsaw:Action="urn:getDeploymentPolicyCloudControllerServiceDeploymentPolicyNotExistsException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesCluster">
            <wsdl:input message="ns:removeKubernetesClusterRequest" wsaw:Action="urn:removeKubernetesCluster"></wsdl:input>
            <wsdl:output message="ns:removeKubernetesClusterResponse" wsaw:Action="urn:removeKubernetesClusterResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesClusterException" name="CloudControllerServiceNonExistingKubernetesClusterException" wsaw:Action="urn:removeKubernetesClusterCloudControllerServiceNonExistingKubernetesClusterException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateDeploymentPolicy">
            <wsdl:input message="ns:validateDeploymentPolicyRequest" wsaw:Action="urn:validateDeploymentPolicy"></wsdl:input>
            <wsdl:output message="ns:validateDeploymentPolicyResponse" wsaw:Action="urn:validateDeploymentPolicyResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceInvalidPartitionException" name="CloudControllerServiceInvalidPartitionException" wsaw:Action="urn:validateDeploymentPolicyCloudControllerServiceInvalidPartitionException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceInvalidCartridgeTypeException" name="CloudControllerServiceInvalidCartridgeTypeException" wsaw:Action="urn:validateDeploymentPolicyCloudControllerServiceInvalidCartridgeTypeException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupCartridges">
            <wsdl:input message="ns:getServiceGroupCartridgesRequest" wsaw:Action="urn:getServiceGroupCartridges"></wsdl:input>
            <wsdl:output message="ns:getServiceGroupCartridgesResponse" wsaw:Action="urn:getServiceGroupCartridgesResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException" name="CloudControllerServiceInvalidServiceGroupException" wsaw:Action="urn:getServiceGroupCartridgesCloudControllerServiceInvalidServiceGroupException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesCluster">
            <wsdl:input message="ns:addKubernetesClusterRequest" wsaw:Action="urn:addKubernetesCluster"></wsdl:input>
            <wsdl:output message="ns:addKubernetesClusterResponse" wsaw:Action="urn:addKubernetesClusterResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceInvalidKubernetesClusterException" name="CloudControllerServiceInvalidKubernetesClusterException" wsaw:Action="urn:addKubernetesClusterCloudControllerServiceInvalidKubernetesClusterException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="registerService">
            <wsdl:input message="ns:registerServiceRequest" wsaw:Action="urn:registerService"></wsdl:input>
            <wsdl:output message="ns:registerServiceResponse" wsaw:Action="urn:registerServiceResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceCartridgeNotFoundException" name="CloudControllerServiceCartridgeNotFoundException" wsaw:Action="urn:registerServiceCloudControllerServiceCartridgeNotFoundException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addServiceGroup">
            <wsdl:input message="ns:addServiceGroupRequest" wsaw:Action="urn:addServiceGroup"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException" name="CloudControllerServiceInvalidServiceGroupException" wsaw:Action="urn:addServiceGroupCloudControllerServiceInvalidServiceGroupException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateInstance">
            <wsdl:input message="ns:terminateInstanceRequest" wsaw:Action="urn:terminateInstance"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceInvalidMemberException" name="CloudControllerServiceInvalidMemberException" wsaw:Action="urn:terminateInstanceCloudControllerServiceInvalidMemberException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceInvalidCartridgeTypeException" name="CloudControllerServiceInvalidCartridgeTypeException" wsaw:Action="urn:terminateInstanceCloudControllerServiceInvalidCartridgeTypeException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceCloudControllerException" name="CloudControllerServiceCloudControllerException" wsaw:Action="urn:terminateInstanceCloudControllerServiceCloudControllerException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addDeployementPolicy">
            <wsdl:input message="ns:addDeployementPolicyRequest" wsaw:Action="urn:addDeployementPolicy"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceDeploymentPolicyAlreadyExistsException" name="CloudControllerServiceDeploymentPolicyAlreadyExistsException" wsaw:Action="urn:addDeployementPolicyCloudControllerServiceDeploymentPolicyAlreadyExistsException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceInvalidDeploymentPolicyException" name="CloudControllerServiceInvalidDeploymentPolicyException" wsaw:Action="urn:addDeployementPolicyCloudControllerServiceInvalidDeploymentPolicyException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupDependencies">
            <wsdl:input message="ns:getServiceGroupDependenciesRequest" wsaw:Action="urn:getServiceGroupDependencies"></wsdl:input>
            <wsdl:output message="ns:getServiceGroupDependenciesResponse" wsaw:Action="urn:getServiceGroupDependenciesResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException" name="CloudControllerServiceInvalidServiceGroupException" wsaw:Action="urn:getServiceGroupDependenciesCloudControllerServiceInvalidServiceGroupException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupSubGroups">
            <wsdl:input message="ns:getServiceGroupSubGroupsRequest" wsaw:Action="urn:getServiceGroupSubGroups"></wsdl:input>
            <wsdl:output message="ns:getServiceGroupSubGroupsResponse" wsaw:Action="urn:getServiceGroupSubGroupsResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException" name="CloudControllerServiceInvalidServiceGroupException" wsaw:Action="urn:getServiceGroupSubGroupsCloudControllerServiceInvalidServiceGroupException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroup">
            <wsdl:input message="ns:getServiceGroupRequest" wsaw:Action="urn:getServiceGroup"></wsdl:input>
            <wsdl:output message="ns:getServiceGroupResponse" wsaw:Action="urn:getServiceGroupResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException" name="CloudControllerServiceInvalidServiceGroupException" wsaw:Action="urn:getServiceGroupCloudControllerServiceInvalidServiceGroupException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateNetworkPartition">
            <wsdl:input message="ns:updateNetworkPartitionRequest" wsaw:Action="urn:updateNetworkPartition"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceNetworkPartitionNotExistsException" name="CloudControllerServiceNetworkPartitionNotExistsException" wsaw:Action="urn:updateNetworkPartitionCloudControllerServiceNetworkPartitionNotExistsException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeNetworkPartition">
            <wsdl:input message="ns:removeNetworkPartitionRequest" wsaw:Action="urn:removeNetworkPartition"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceNetworkPartitionNotExistsException" name="CloudControllerServiceNetworkPartitionNotExistsException" wsaw:Action="urn:removeNetworkPartitionCloudControllerServiceNetworkPartitionNotExistsException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCartridgeInfo">
            <wsdl:input message="ns:getCartridgeInfoRequest" wsaw:Action="urn:getCartridgeInfo"></wsdl:input>
            <wsdl:output message="ns:getCartridgeInfoResponse" wsaw:Action="urn:getCartridgeInfoResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceCartridgeNotFoundException" name="CloudControllerServiceCartridgeNotFoundException" wsaw:Action="urn:getCartridgeInfoCloudControllerServiceCartridgeNotFoundException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesHost">
            <wsdl:input message="ns:addKubernetesHostRequest" wsaw:Action="urn:addKubernetesHost"></wsdl:input>
            <wsdl:output message="ns:addKubernetesHostResponse" wsaw:Action="urn:addKubernetesHostResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceInvalidKubernetesHostException" name="CloudControllerServiceInvalidKubernetesHostException" wsaw:Action="urn:addKubernetesHostCloudControllerServiceInvalidKubernetesHostException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesClusterException" name="CloudControllerServiceNonExistingKubernetesClusterException" wsaw:Action="urn:addKubernetesHostCloudControllerServiceNonExistingKubernetesClusterException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateDeployementPolicy">
            <wsdl:input message="ns:updateDeployementPolicyRequest" wsaw:Action="urn:updateDeployementPolicy"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceDeploymentPolicyNotExistsException" name="CloudControllerServiceDeploymentPolicyNotExistsException" wsaw:Action="urn:updateDeployementPolicyCloudControllerServiceDeploymentPolicyNotExistsException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceInvalidDeploymentPolicyException" name="CloudControllerServiceInvalidDeploymentPolicyException" wsaw:Action="urn:updateDeployementPolicyCloudControllerServiceInvalidDeploymentPolicyException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeDeployementPolicy">
            <wsdl:input message="ns:removeDeployementPolicyRequest" wsaw:Action="urn:removeDeployementPolicy"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceDeploymentPolicyNotExistsException" name="CloudControllerServiceDeploymentPolicyNotExistsException" wsaw:Action="urn:removeDeployementPolicyCloudControllerServiceDeploymentPolicyNotExistsException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createClusterInstance">
            <wsdl:input message="ns:createClusterInstanceRequest" wsaw:Action="urn:createClusterInstance"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceClusterInstanceCreationException" name="CloudControllerServiceClusterInstanceCreationException" wsaw:Action="urn:createClusterInstanceCloudControllerServiceClusterInstanceCreationException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="unregisterService">
            <wsdl:input message="ns:unregisterServiceRequest" wsaw:Action="urn:unregisterService"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceUnregisteredClusterException" name="CloudControllerServiceUnregisteredClusterException" wsaw:Action="urn:unregisterServiceCloudControllerServiceUnregisteredClusterException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getHostsForKubernetesCluster">
            <wsdl:input message="ns:getHostsForKubernetesClusterRequest" wsaw:Action="urn:getHostsForKubernetesCluster"></wsdl:input>
            <wsdl:output message="ns:getHostsForKubernetesClusterResponse" wsaw:Action="urn:getHostsForKubernetesClusterResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesClusterException" name="CloudControllerServiceNonExistingKubernetesClusterException" wsaw:Action="urn:getHostsForKubernetesClusterCloudControllerServiceNonExistingKubernetesClusterException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesHost">
            <wsdl:input message="ns:removeKubernetesHostRequest" wsaw:Action="urn:removeKubernetesHost"></wsdl:input>
            <wsdl:output message="ns:removeKubernetesHostResponse" wsaw:Action="urn:removeKubernetesHostResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesHostException" name="CloudControllerServiceNonExistingKubernetesHostException" wsaw:Action="urn:removeKubernetesHostCloudControllerServiceNonExistingKubernetesHostException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesClusters">
            <wsdl:input message="ns:getKubernetesClustersRequest" wsaw:Action="urn:getKubernetesClusters"></wsdl:input>
            <wsdl:output message="ns:getKubernetesClustersResponse" wsaw:Action="urn:getKubernetesClustersResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getMasterForKubernetesCluster">
            <wsdl:input message="ns:getMasterForKubernetesClusterRequest" wsaw:Action="urn:getMasterForKubernetesCluster"></wsdl:input>
            <wsdl:output message="ns:getMasterForKubernetesClusterResponse" wsaw:Action="urn:getMasterForKubernetesClusterResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesClusterException" name="CloudControllerServiceNonExistingKubernetesClusterException" wsaw:Action="urn:getMasterForKubernetesClusterCloudControllerServiceNonExistingKubernetesClusterException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startInstances">
            <wsdl:input message="ns:startInstancesRequest" wsaw:Action="urn:startInstances"></wsdl:input>
            <wsdl:output message="ns:startInstancesResponse" wsaw:Action="urn:startInstancesResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceCartridgeNotFoundException" name="CloudControllerServiceCartridgeNotFoundException" wsaw:Action="urn:startInstancesCloudControllerServiceCartridgeNotFoundException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceInvalidIaasProviderException" name="CloudControllerServiceInvalidIaasProviderException" wsaw:Action="urn:startInstancesCloudControllerServiceInvalidIaasProviderException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceCloudControllerException" name="CloudControllerServiceCloudControllerException" wsaw:Action="urn:startInstancesCloudControllerServiceCloudControllerException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateCartridge">
            <wsdl:input message="ns:updateCartridgeRequest" wsaw:Action="urn:updateCartridge"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceInvalidCartridgeDefinitionException" name="CloudControllerServiceInvalidCartridgeDefinitionException" wsaw:Action="urn:updateCartridgeCloudControllerServiceInvalidCartridgeDefinitionException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceInvalidIaasProviderException" name="CloudControllerServiceInvalidIaasProviderException" wsaw:Action="urn:updateCartridgeCloudControllerServiceInvalidIaasProviderException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceCartridgeDefinitionNotExistsException" name="CloudControllerServiceCartridgeDefinitionNotExistsException" wsaw:Action="urn:updateCartridgeCloudControllerServiceCartridgeDefinitionNotExistsException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startInstance">
            <wsdl:input message="ns:startInstanceRequest" wsaw:Action="urn:startInstance"></wsdl:input>
            <wsdl:output message="ns:startInstanceResponse" wsaw:Action="urn:startInstanceResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceCartridgeNotFoundException" name="CloudControllerServiceCartridgeNotFoundException" wsaw:Action="urn:startInstanceCloudControllerServiceCartridgeNotFoundException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceInvalidIaasProviderException" name="CloudControllerServiceInvalidIaasProviderException" wsaw:Action="urn:startInstanceCloudControllerServiceInvalidIaasProviderException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceCloudControllerException" name="CloudControllerServiceCloudControllerException" wsaw:Action="urn:startInstanceCloudControllerServiceCloudControllerException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateInstances">
            <wsdl:input message="ns:terminateInstancesRequest" wsaw:Action="urn:terminateInstances"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceInvalidClusterException" name="CloudControllerServiceInvalidClusterException" wsaw:Action="urn:terminateInstancesCloudControllerServiceInvalidClusterException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getNetworkPartition">
            <wsdl:input message="ns:getNetworkPartitionRequest" wsaw:Action="urn:getNetworkPartition"></wsdl:input>
            <wsdl:output message="ns:getNetworkPartitionResponse" wsaw:Action="urn:getNetworkPartitionResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateClusterStatus">
            <wsdl:input message="ns:updateClusterStatusRequest" wsaw:Action="urn:updateClusterStatus"></wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getClusterContext">
            <wsdl:input message="ns:getClusterContextRequest" wsaw:Action="urn:getClusterContext"></wsdl:input>
            <wsdl:output message="ns:getClusterContextResponse" wsaw:Action="urn:getClusterContextResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesHost">
            <wsdl:input message="ns:updateKubernetesHostRequest" wsaw:Action="urn:updateKubernetesHost"></wsdl:input>
            <wsdl:output message="ns:updateKubernetesHostResponse" wsaw:Action="urn:updateKubernetesHostResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceInvalidKubernetesHostException" name="CloudControllerServiceInvalidKubernetesHostException" wsaw:Action="urn:updateKubernetesHostCloudControllerServiceInvalidKubernetesHostException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesHostException" name="CloudControllerServiceNonExistingKubernetesHostException" wsaw:Action="urn:updateKubernetesHostCloudControllerServiceNonExistingKubernetesHostException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeServiceGroup">
            <wsdl:input message="ns:removeServiceGroupRequest" wsaw:Action="urn:removeServiceGroup"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceInvalidServiceGroupException" name="CloudControllerServiceInvalidServiceGroupException" wsaw:Action="urn:removeServiceGroupCloudControllerServiceInvalidServiceGroupException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addNetworkPartition">
            <wsdl:input message="ns:addNetworkPartitionRequest" wsaw:Action="urn:addNetworkPartition"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceNetworkPartitionAlreadyExistsException" name="CloudControllerServiceNetworkPartitionAlreadyExistsException" wsaw:Action="urn:addNetworkPartitionCloudControllerServiceNetworkPartitionAlreadyExistsException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesCluster">
            <wsdl:input message="ns:getKubernetesClusterRequest" wsaw:Action="urn:getKubernetesCluster"></wsdl:input>
            <wsdl:output message="ns:getKubernetesClusterResponse" wsaw:Action="urn:getKubernetesClusterResponse"></wsdl:output>
            <wsdl:fault message="ns:CloudControllerServiceNonExistingKubernetesClusterException" name="CloudControllerServiceNonExistingKubernetesClusterException" wsaw:Action="urn:getKubernetesClusterCloudControllerServiceNonExistingKubernetesClusterException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeCartridge">
            <wsdl:input message="ns:removeCartridgeRequest" wsaw:Action="urn:removeCartridge"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceInvalidCartridgeTypeException" name="CloudControllerServiceInvalidCartridgeTypeException" wsaw:Action="urn:removeCartridgeCloudControllerServiceInvalidCartridgeTypeException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addCartridge">
            <wsdl:input message="ns:addCartridgeRequest" wsaw:Action="urn:addCartridge"></wsdl:input>
            <wsdl:fault message="ns:CloudControllerServiceInvalidCartridgeDefinitionException" name="CloudControllerServiceInvalidCartridgeDefinitionException" wsaw:Action="urn:addCartridgeCloudControllerServiceInvalidCartridgeDefinitionException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceInvalidIaasProviderException" name="CloudControllerServiceInvalidIaasProviderException" wsaw:Action="urn:addCartridgeCloudControllerServiceInvalidIaasProviderException"></wsdl:fault>
            <wsdl:fault message="ns:CloudControllerServiceCartridgeAlreadyExistsException" name="CloudControllerServiceCartridgeAlreadyExistsException" wsaw:Action="urn:addCartridgeCloudControllerServiceCartridgeAlreadyExistsException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getNetworkPartitions">
            <wsdl:input message="ns:getNetworkPartitionsRequest" wsaw:Action="urn:getNetworkPartitions"></wsdl:input>
            <wsdl:output message="ns:getNetworkPartitionsResponse" wsaw:Action="urn:getNetworkPartitionsResponse"></wsdl:output>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="CloudControllerServiceSoap11Binding" type="ns:CloudControllerServicePortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"></soap:binding>
        <wsdl:operation name="getDeploymentPolicies">
            <soap:operation soapAction="urn:getDeploymentPolicies" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getCartridges">
            <soap:operation soapAction="urn:getCartridges" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesMaster">
            <soap:operation soapAction="urn:updateKubernetesMaster" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesMasterException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidKubernetesMasterException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesMasterException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesMasterException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validatePartition">
            <soap:operation soapAction="urn:validatePartition" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidPartitionException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidPartitionException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createApplicationClusters">
            <soap:operation soapAction="urn:createApplicationClusters" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceApplicationClusterRegistrationException">
                <soap:fault use="literal" name="CloudControllerServiceApplicationClusterRegistrationException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDeploymentPolicy">
            <soap:operation soapAction="urn:getDeploymentPolicy" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceDeploymentPolicyNotExistsException">
                <soap:fault use="literal" name="CloudControllerServiceDeploymentPolicyNotExistsException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesCluster">
            <soap:operation soapAction="urn:removeKubernetesCluster" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesClusterException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesClusterException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateDeploymentPolicy">
            <soap:operation soapAction="urn:validateDeploymentPolicy" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidPartitionException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidPartitionException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupCartridges">
            <soap:operation soapAction="urn:getServiceGroupCartridges" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesCluster">
            <soap:operation soapAction="urn:addKubernetesCluster" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesClusterException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidKubernetesClusterException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addServiceGroup">
            <soap:operation soapAction="urn:addServiceGroup" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="registerService">
            <soap:operation soapAction="urn:registerService" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceCartridgeNotFoundException">
                <soap:fault use="literal" name="CloudControllerServiceCartridgeNotFoundException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateInstance">
            <soap:operation soapAction="urn:terminateInstance" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceCloudControllerException">
                <soap:fault use="literal" name="CloudControllerServiceCloudControllerException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidMemberException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidMemberException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addDeployementPolicy">
            <soap:operation soapAction="urn:addDeployementPolicy" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidDeploymentPolicyException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidDeploymentPolicyException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceDeploymentPolicyAlreadyExistsException">
                <soap:fault use="literal" name="CloudControllerServiceDeploymentPolicyAlreadyExistsException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupDependencies">
            <soap:operation soapAction="urn:getServiceGroupDependencies" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupSubGroups">
            <soap:operation soapAction="urn:getServiceGroupSubGroups" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroup">
            <soap:operation soapAction="urn:getServiceGroup" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeNetworkPartition">
            <soap:operation soapAction="urn:removeNetworkPartition" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceNetworkPartitionNotExistsException">
                <soap:fault use="literal" name="CloudControllerServiceNetworkPartitionNotExistsException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateNetworkPartition">
            <soap:operation soapAction="urn:updateNetworkPartition" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceNetworkPartitionNotExistsException">
                <soap:fault use="literal" name="CloudControllerServiceNetworkPartitionNotExistsException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCartridgeInfo">
            <soap:operation soapAction="urn:getCartridgeInfo" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceCartridgeNotFoundException">
                <soap:fault use="literal" name="CloudControllerServiceCartridgeNotFoundException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesHost">
            <soap:operation soapAction="urn:addKubernetesHost" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesHostException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidKubernetesHostException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesClusterException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesClusterException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateDeployementPolicy">
            <soap:operation soapAction="urn:updateDeployementPolicy" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidDeploymentPolicyException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidDeploymentPolicyException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceDeploymentPolicyNotExistsException">
                <soap:fault use="literal" name="CloudControllerServiceDeploymentPolicyNotExistsException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createClusterInstance">
            <soap:operation soapAction="urn:createClusterInstance" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceClusterInstanceCreationException">
                <soap:fault use="literal" name="CloudControllerServiceClusterInstanceCreationException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeDeployementPolicy">
            <soap:operation soapAction="urn:removeDeployementPolicy" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceDeploymentPolicyNotExistsException">
                <soap:fault use="literal" name="CloudControllerServiceDeploymentPolicyNotExistsException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="unregisterService">
            <soap:operation soapAction="urn:unregisterService" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceUnregisteredClusterException">
                <soap:fault use="literal" name="CloudControllerServiceUnregisteredClusterException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getHostsForKubernetesCluster">
            <soap:operation soapAction="urn:getHostsForKubernetesCluster" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesClusterException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesClusterException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesHost">
            <soap:operation soapAction="urn:removeKubernetesHost" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesHostException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesHostException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesClusters">
            <soap:operation soapAction="urn:getKubernetesClusters" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getMasterForKubernetesCluster">
            <soap:operation soapAction="urn:getMasterForKubernetesCluster" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesClusterException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesClusterException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateCartridge">
            <soap:operation soapAction="urn:updateCartridge" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceCartridgeDefinitionNotExistsException">
                <soap:fault use="literal" name="CloudControllerServiceCartridgeDefinitionNotExistsException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeDefinitionException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidCartridgeDefinitionException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startInstances">
            <soap:operation soapAction="urn:startInstances" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceCloudControllerException">
                <soap:fault use="literal" name="CloudControllerServiceCloudControllerException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceCartridgeNotFoundException">
                <soap:fault use="literal" name="CloudControllerServiceCartridgeNotFoundException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startInstance">
            <soap:operation soapAction="urn:startInstance" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceCloudControllerException">
                <soap:fault use="literal" name="CloudControllerServiceCloudControllerException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceCartridgeNotFoundException">
                <soap:fault use="literal" name="CloudControllerServiceCartridgeNotFoundException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getNetworkPartition">
            <soap:operation soapAction="urn:getNetworkPartition" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="terminateInstances">
            <soap:operation soapAction="urn:terminateInstances" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidClusterException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidClusterException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getClusterContext">
            <soap:operation soapAction="urn:getClusterContext" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateClusterStatus">
            <soap:operation soapAction="urn:updateClusterStatus" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesHost">
            <soap:operation soapAction="urn:updateKubernetesHost" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesHostException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidKubernetesHostException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesHostException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesHostException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeServiceGroup">
            <soap:operation soapAction="urn:removeServiceGroup" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addNetworkPartition">
            <soap:operation soapAction="urn:addNetworkPartition" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceNetworkPartitionAlreadyExistsException">
                <soap:fault use="literal" name="CloudControllerServiceNetworkPartitionAlreadyExistsException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesCluster">
            <soap:operation soapAction="urn:getKubernetesCluster" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesClusterException">
                <soap:fault use="literal" name="CloudControllerServiceNonExistingKubernetesClusterException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeCartridge">
            <soap:operation soapAction="urn:removeCartridge" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getNetworkPartitions">
            <soap:operation soapAction="urn:getNetworkPartitions" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"></soap:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="addCartridge">
            <soap:operation soapAction="urn:addCartridge" style="document"></soap:operation>
            <wsdl:input>
                <soap:body use="literal"></soap:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeDefinitionException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidCartridgeDefinitionException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"></soap:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceCartridgeAlreadyExistsException">
                <soap:fault use="literal" name="CloudControllerServiceCartridgeAlreadyExistsException"></soap:fault>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="CloudControllerServiceSoap12Binding" type="ns:CloudControllerServicePortType">
        <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"></soap12:binding>
        <wsdl:operation name="getDeploymentPolicies">
            <soap12:operation soapAction="urn:getDeploymentPolicies" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getCartridges">
            <soap12:operation soapAction="urn:getCartridges" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesMaster">
            <soap12:operation soapAction="urn:updateKubernetesMaster" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesMasterException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidKubernetesMasterException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesMasterException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesMasterException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validatePartition">
            <soap12:operation soapAction="urn:validatePartition" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidPartitionException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidPartitionException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createApplicationClusters">
            <soap12:operation soapAction="urn:createApplicationClusters" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceApplicationClusterRegistrationException">
                <soap12:fault use="literal" name="CloudControllerServiceApplicationClusterRegistrationException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDeploymentPolicy">
            <soap12:operation soapAction="urn:getDeploymentPolicy" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceDeploymentPolicyNotExistsException">
                <soap12:fault use="literal" name="CloudControllerServiceDeploymentPolicyNotExistsException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesCluster">
            <soap12:operation soapAction="urn:removeKubernetesCluster" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesClusterException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="validateDeploymentPolicy">
            <soap12:operation soapAction="urn:validateDeploymentPolicy" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidPartitionException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidPartitionException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupCartridges">
            <soap12:operation soapAction="urn:getServiceGroupCartridges" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesCluster">
            <soap12:operation soapAction="urn:addKubernetesCluster" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidKubernetesClusterException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addServiceGroup">
            <soap12:operation soapAction="urn:addServiceGroup" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="registerService">
            <soap12:operation soapAction="urn:registerService" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceCartridgeNotFoundException">
                <soap12:fault use="literal" name="CloudControllerServiceCartridgeNotFoundException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="terminateInstance">
            <soap12:operation soapAction="urn:terminateInstance" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceCloudControllerException">
                <soap12:fault use="literal" name="CloudControllerServiceCloudControllerException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidMemberException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidMemberException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addDeployementPolicy">
            <soap12:operation soapAction="urn:addDeployementPolicy" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidDeploymentPolicyException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidDeploymentPolicyException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceDeploymentPolicyAlreadyExistsException">
                <soap12:fault use="literal" name="CloudControllerServiceDeploymentPolicyAlreadyExistsException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupDependencies">
            <soap12:operation soapAction="urn:getServiceGroupDependencies" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupSubGroups">
            <soap12:operation soapAction="urn:getServiceGroupSubGroups" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroup">
            <soap12:operation soapAction="urn:getServiceGroup" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeNetworkPartition">
            <soap12:operation soapAction="urn:removeNetworkPartition" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceNetworkPartitionNotExistsException">
                <soap12:fault use="literal" name="CloudControllerServiceNetworkPartitionNotExistsException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateNetworkPartition">
            <soap12:operation soapAction="urn:updateNetworkPartition" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceNetworkPartitionNotExistsException">
                <soap12:fault use="literal" name="CloudControllerServiceNetworkPartitionNotExistsException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCartridgeInfo">
            <soap12:operation soapAction="urn:getCartridgeInfo" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceCartridgeNotFoundException">
                <soap12:fault use="literal" name="CloudControllerServiceCartridgeNotFoundException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesHost">
            <soap12:operation soapAction="urn:addKubernetesHost" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesHostException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidKubernetesHostException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesClusterException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateDeployementPolicy">
            <soap12:operation soapAction="urn:updateDeployementPolicy" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidDeploymentPolicyException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidDeploymentPolicyException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceDeploymentPolicyNotExistsException">
                <soap12:fault use="literal" name="CloudControllerServiceDeploymentPolicyNotExistsException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createClusterInstance">
            <soap12:operation soapAction="urn:createClusterInstance" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceClusterInstanceCreationException">
                <soap12:fault use="literal" name="CloudControllerServiceClusterInstanceCreationException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeDeployementPolicy">
            <soap12:operation soapAction="urn:removeDeployementPolicy" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceDeploymentPolicyNotExistsException">
                <soap12:fault use="literal" name="CloudControllerServiceDeploymentPolicyNotExistsException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="unregisterService">
            <soap12:operation soapAction="urn:unregisterService" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceUnregisteredClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceUnregisteredClusterException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getHostsForKubernetesCluster">
            <soap12:operation soapAction="urn:getHostsForKubernetesCluster" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesClusterException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesHost">
            <soap12:operation soapAction="urn:removeKubernetesHost" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesHostException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesHostException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesClusters">
            <soap12:operation soapAction="urn:getKubernetesClusters" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getMasterForKubernetesCluster">
            <soap12:operation soapAction="urn:getMasterForKubernetesCluster" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesClusterException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateCartridge">
            <soap12:operation soapAction="urn:updateCartridge" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceCartridgeDefinitionNotExistsException">
                <soap12:fault use="literal" name="CloudControllerServiceCartridgeDefinitionNotExistsException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeDefinitionException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidCartridgeDefinitionException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startInstances">
            <soap12:operation soapAction="urn:startInstances" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceCloudControllerException">
                <soap12:fault use="literal" name="CloudControllerServiceCloudControllerException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceCartridgeNotFoundException">
                <soap12:fault use="literal" name="CloudControllerServiceCartridgeNotFoundException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="startInstance">
            <soap12:operation soapAction="urn:startInstance" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceCloudControllerException">
                <soap12:fault use="literal" name="CloudControllerServiceCloudControllerException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceCartridgeNotFoundException">
                <soap12:fault use="literal" name="CloudControllerServiceCartridgeNotFoundException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getNetworkPartition">
            <soap12:operation soapAction="urn:getNetworkPartition" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="terminateInstances">
            <soap12:operation soapAction="urn:terminateInstances" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidClusterException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getClusterContext">
            <soap12:operation soapAction="urn:getClusterContext" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateClusterStatus">
            <soap12:operation soapAction="urn:updateClusterStatus" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesHost">
            <soap12:operation soapAction="urn:updateKubernetesHost" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceInvalidKubernetesHostException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidKubernetesHostException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesHostException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesHostException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeServiceGroup">
            <soap12:operation soapAction="urn:removeServiceGroup" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidServiceGroupException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidServiceGroupException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="addNetworkPartition">
            <soap12:operation soapAction="urn:addNetworkPartition" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceNetworkPartitionAlreadyExistsException">
                <soap12:fault use="literal" name="CloudControllerServiceNetworkPartitionAlreadyExistsException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesCluster">
            <soap12:operation soapAction="urn:getKubernetesCluster" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
            <wsdl:fault name="CloudControllerServiceNonExistingKubernetesClusterException">
                <soap12:fault use="literal" name="CloudControllerServiceNonExistingKubernetesClusterException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="removeCartridge">
            <soap12:operation soapAction="urn:removeCartridge" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeTypeException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidCartridgeTypeException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getNetworkPartitions">
            <soap12:operation soapAction="urn:getNetworkPartitions" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"></soap12:body>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="addCartridge">
            <soap12:operation soapAction="urn:addCartridge" style="document"></soap12:operation>
            <wsdl:input>
                <soap12:body use="literal"></soap12:body>
            </wsdl:input>
            <wsdl:fault name="CloudControllerServiceInvalidCartridgeDefinitionException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidCartridgeDefinitionException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceInvalidIaasProviderException">
                <soap12:fault use="literal" name="CloudControllerServiceInvalidIaasProviderException"></soap12:fault>
            </wsdl:fault>
            <wsdl:fault name="CloudControllerServiceCartridgeAlreadyExistsException">
                <soap12:fault use="literal" name="CloudControllerServiceCartridgeAlreadyExistsException"></soap12:fault>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="CloudControllerServiceHttpBinding" type="ns:CloudControllerServicePortType">
        <http:binding verb="POST"></http:binding>
        <wsdl:operation name="getDeploymentPolicies">
            <http:operation location="getDeploymentPolicies"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getCartridges">
            <http:operation location="getCartridges"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesMaster">
            <http:operation location="updateKubernetesMaster"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="validatePartition">
            <http:operation location="validatePartition"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="createApplicationClusters">
            <http:operation location="createApplicationClusters"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getDeploymentPolicy">
            <http:operation location="getDeploymentPolicy"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesCluster">
            <http:operation location="removeKubernetesCluster"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="validateDeploymentPolicy">
            <http:operation location="validateDeploymentPolicy"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupCartridges">
            <http:operation location="getServiceGroupCartridges"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesCluster">
            <http:operation location="addKubernetesCluster"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="addServiceGroup">
            <http:operation location="addServiceGroup"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="registerService">
            <http:operation location="registerService"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="terminateInstance">
            <http:operation location="terminateInstance"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="addDeployementPolicy">
            <http:operation location="addDeployementPolicy"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupDependencies">
            <http:operation location="getServiceGroupDependencies"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroupSubGroups">
            <http:operation location="getServiceGroupSubGroups"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getServiceGroup">
            <http:operation location="getServiceGroup"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="removeNetworkPartition">
            <http:operation location="removeNetworkPartition"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="updateNetworkPartition">
            <http:operation location="updateNetworkPartition"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getCartridgeInfo">
            <http:operation location="getCartridgeInfo"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="addKubernetesHost">
            <http:operation location="addKubernetesHost"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateDeployementPolicy">
            <http:operation location="updateDeployementPolicy"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="createClusterInstance">
            <http:operation location="createClusterInstance"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="removeDeployementPolicy">
            <http:operation location="removeDeployementPolicy"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="unregisterService">
            <http:operation location="unregisterService"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getHostsForKubernetesCluster">
            <http:operation location="getHostsForKubernetesCluster"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="removeKubernetesHost">
            <http:operation location="removeKubernetesHost"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesClusters">
            <http:operation location="getKubernetesClusters"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getMasterForKubernetesCluster">
            <http:operation location="getMasterForKubernetesCluster"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateCartridge">
            <http:operation location="updateCartridge"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="startInstances">
            <http:operation location="startInstances"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="startInstance">
            <http:operation location="startInstance"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getNetworkPartition">
            <http:operation location="getNetworkPartition"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="terminateInstances">
            <http:operation location="terminateInstances"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getClusterContext">
            <http:operation location="getClusterContext"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="updateClusterStatus">
            <http:operation location="updateClusterStatus"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="updateKubernetesHost">
            <http:operation location="updateKubernetesHost"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="removeServiceGroup">
            <http:operation location="removeServiceGroup"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="addNetworkPartition">
            <http:operation location="addNetworkPartition"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getKubernetesCluster">
            <http:operation location="getKubernetesCluster"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="removeCartridge">
            <http:operation location="removeCartridge"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
        <wsdl:operation name="getNetworkPartitions">
            <http:operation location="getNetworkPartitions"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
            <wsdl:output>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="addCartridge">
            <http:operation location="addCartridge"></http:operation>
            <wsdl:input>
                <mime:content type="text/xml" part="parameters"></mime:content>
            </wsdl:input>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="CloudControllerService">
        <wsdl:port name="CloudControllerServiceHttpSoap11Endpoint" binding="ns:CloudControllerServiceSoap11Binding">
            <soap:address location="http://172.17.42.1:9763/services/CloudControllerService.CloudControllerServiceHttpSoap11Endpoint/"></soap:address>
        </wsdl:port>
        <wsdl:port name="CloudControllerServiceHttpsSoap11Endpoint" binding="ns:CloudControllerServiceSoap11Binding">
            <soap:address location="https://172.17.42.1:9443/services/CloudControllerService.CloudControllerServiceHttpsSoap11Endpoint/"></soap:address>
        </wsdl:port>
        <wsdl:port name="CloudControllerServiceHttpSoap12Endpoint" binding="ns:CloudControllerServiceSoap12Binding">
            <soap12:address location="http://172.17.42.1:9763/services/CloudControllerService.CloudControllerServiceHttpSoap12Endpoint/"></soap12:address>
        </wsdl:port>
        <wsdl:port name="CloudControllerServiceHttpsSoap12Endpoint" binding="ns:CloudControllerServiceSoap12Binding">
            <soap12:address location="https://172.17.42.1:9443/services/CloudControllerService.CloudControllerServiceHttpsSoap12Endpoint/"></soap12:address>
        </wsdl:port>
        <wsdl:port name="CloudControllerServiceHttpEndpoint" binding="ns:CloudControllerServiceHttpBinding">
            <http:address location="http://172.17.42.1:9763/services/CloudControllerService.CloudControllerServiceHttpEndpoint/"></http:address>
        </wsdl:port>
        <wsdl:port name="CloudControllerServiceHttpsEndpoint" binding="ns:CloudControllerServiceHttpBinding">
            <http:address location="https://172.17.42.1:9443/services/CloudControllerService.CloudControllerServiceHttpsEndpoint/"></http:address>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>