#!/bin/bash
# ----------------------------------------------------------------------------
#
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.
#
# ----------------------------------------------------------------------------
#
#  Server configuration script for Apache Stratos
# ----------------------------------------------------------------------------
#
#  Configure below parameters to install Apache Stratos using ../setup.sh.
#  General configuration parameters are mandatory and other sections are optional. 
#
# ----------------------------------------------------------------------------


# ----------------------------------------------------------------------------
# General configuration
# ----------------------------------------------------------------------------
<<<<<<< HEAD
export setup_path= #Folder path containing stratos_setup
export stratos_packs= #Folder path containing stratos package and other third party packs and jars 
export stratos_path= #Folder which stratos will be installed

export JAVA_HOME= #Java home path

export log_path=/var/log/apache-stratos
=======
export JAVA_HOME= # Java home path
export hostip="" # IP address of the host which setup script is run
export host_user="" # A host user account for stratos. If not provided deafult is assumed stratos. If no account #named stratos exist it will be created.

export setup_path= # Folder path containing stratos_setup
export stratos_pack_path= # Folder path containing stratos packages 
export stratos_path= # Folder which stratos will be installed
export stratos_version=3.0.0-incubating # Stratos version, will be used to refer package files
export log_path=/var/log/apache-stratos
export mysql_connector_jar=$stratos_pack_path/"mysql-connector-java-5.1.25.jar" # mysql connector jar file name
export stratos_domain="stratos.apache.org"
export resource_path=$setup_path/resources
export script_path=$setup_path/scripts


# MB configuration
# ----------------------------------------------------------------------------
export mb_ip=$hostip # ip address of the message broker host
export mb_hostname=mb.$stratos_domain # host name of the message broker
export mb_listen_port="5677"


# SC configuration
# ----------------------------------------------------------------------------
export sc_path=$stratos_path/"apache-stratos-sc-$stratos_version"
export sc_pack=$stratos_pack_path/"apache-stratos-sc-$stratos_version.zip"
export sc_ip=$hostip # ip address of the stratos controller host
export sc_hostname="$stratos_domain" # host name of the stratos controller

export userstore_db_hostname="localhost"
export userstore_db_schema="userstore"
export userstore_db_port="3306"
export userstore_db_user="<mysql-username>"
export userstore_db_pass="<mysql-password>"

export stratos_foundation_db_hostname="localhost"
export stratos_foundation_db_schema="stratos_foundation"
export stratos_foundation_db_port="3306"
export stratos_foundation_db_user="<mysql-username>"
export stratos_foundation_db_pass="<mysql-password>"

export sc_https_port="9445"
export sc_http_port="9765"
export sc_port_offset=2
export cassandra_port="9163"
export keypair_path="<keypair_path>"


# Git repo cofiguration. This will be needed only if you need to setup an internal git repo.
# ----------------------------------------------------------------------------
export git_user="git"
export email="git@$stratos_domain"
export git_ip=$hostip 
export git_hostname="$stratos_domain"


# CC configuration
# ----------------------------------------------------------------------------

export cc_path=$stratos_path/"apache-stratos-cc-$stratos_version"
export cc_pack=$stratos_pack_path/"apache-stratos-cc-$stratos_version.zip"
export cc_ip=$hostip # ip address of the cloud controller host
export cc_hostname="cc.$stratos_domain" # host name of the cloud controller
export cc_https_port="9444"
export cc_port_offset=1
export mb_cassandra_host="localhost"
export mb_cassandra_port="9161"
>>>>>>> FETCH_HEAD

export host_user="" #A host user account for the machine which run Stratos component(s)

export stratos_domain="stratos.apache.org"

<<<<<<< HEAD
export host_ip="127.0.0.1" # Machine ip on host machine
export offset=0
=======
export elb_path=$stratos_path/"apache-stratos-elb-$stratos_version"
export elb_pack=$stratos_pack_path/"apache-stratos-elb-$stratos_version.zip"
export elb_ip=$hostip # ip address of the load balancer host
export elb_hostname="elb.$stratos_domain" # host name of the load balancer
export enable_autoscaler=true
export enable_embedded_autoscaler=false
export elb_port_offset=0
export elb_port="9443"
>>>>>>> FETCH_HEAD

export puppet_ip="127.0.0.1" 	# Machine ip on which puppet master run
export puppet_hostname="puppet-hostname" # Host name given to identify the puppet master
export puppet_environment="puppet_environment" # Name of puppet environment

export mb_ip="127.0.0.1" # Machine ip on which mb run
export mb_port=61616 #default port which the message broker service runs
 
export stratos_extract_path=$stratos_path/"apache-stratos"
export stratos_pack_zip_name="apache-stratos-4.1.0-SNAPSHOT.zip"
export stratos_pack_zip=$stratos_packs/$stratos_pack_zip_name

<<<<<<< HEAD
export activemq_pack=$stratos_packs/"apache-activemq-5.9.1-bin.tar.gz"
export activemq_path=$stratos_path/"apache-activemq-5.9.1"
=======
export agent_path=$stratos_path/"apache-stratos-agent-$stratos_version"
export agent_pack=$stratos_pack_path/"apache-stratos-agent-$stratos_version.zip"
export agent_clustering_port="4025"
export agent_ip=$hostip # ip address of the agent host
export agent_hostname="agent.$stratos_domain" # host name of the agent
export agent_http_port="9767"
export agent_https_port="9447"
export agent_port_offset=4
>>>>>>> FETCH_HEAD

export jndi_template_path=$setup_path/"config/all/repository/conf/activemq/jndi.properties"

<<<<<<< HEAD
export resource_path=$setup_path/resources


=======
>>>>>>> FETCH_HEAD
# IaaS Providers
# ----------------------------------------------------------------------------
# Set <iaas-name>_provider_enabled parameter to true to enable desired IaaS. A hybrid cloud could be
# created using multiple IaaSs.

# EC2
export ec2_provider_enabled=true
export ec2_identity="<ec2_identity>"
export ec2_credential="<ec2_credential>"
export ec2_keypair_name="<ec2_keypair_name>"
export ec2_owner_id="<ec2_owner_id>"
<<<<<<< HEAD
export ec2_availability_zone="<ec2_availability_zone>"
export ec2_security_groups="<ec2_security_groups>"

# Openstack
export openstack_provider_enabled=false
export openstack_identity="stratos:stratos" # Openstack project name:Openstack login user
export openstack_credential="password" # Openstack login password
export openstack_jclouds_endpoint="http://hostname:5000/v2.0"
export openstack_keypair_name=""
export openstack_security_groups=""
# default to nova. If you have neutron networking environment, set it to neutron
export openstack_networking_provider="nova"

# vCloud
export vcloud_provider_enabled=false
export vcloud_identity="stratos" # vCloud login user
export vcloud_credential="password" # vCloud login password
export vcloud_jclouds_endpoint="https://vcloud/api"

# GCE
export gce_provider_enabled=false
export gce_identity="<gce_identity>"
export gce_credential="<gce_credential>"

# kubernetes
export kubernetes_provider_enabled=false
export kubernetes_identity="<kubernetes_identity>"
export kubernetes_credential="<kubernetes_credential>"

# Database configuration
=======
export ec2_scaleup_order=1
export ec2_scaledown_order=2
export ec2_region="<ec2_region>"
export ec2_availability_zone="<ec2_availability_zone>"
export ec2_security_groups="<ec2_security_groups>"
export ec2_instance_type="m1.large"
export ec2_image_id=""
export ec2_php_cartridge_image_id="" 
export ec2_mysql_cartridge_image_id=""
export ec2_tomcat_cartridge_image_id=""

# EC2 cartridge images availble in ap-southeast-1 region:
# export ec2_php_cartridge_image_id="ami-8a733bd8" 
# export ec2_mysql_cartridge_image_id="ami-3e753d6c"
# export ec2_tomcat_cartridge_image_id="ami-6484cc36"


# Openstack
export openstack_provider_enabled=true
export openstack_identity="<project-name>:<username>" # Openstack project name : username
export openstack_credential="<password>" # Openstack password
export openstack_tenant="<project-name>" # Openstack project name
export openstack_project_id=$openstack_tenant
export openstack_jclouds_endpoint="http://<hostname>:5000/v2.0"
export openstack_scaleup_order=2
export openstack_scaledown_order=3
export openstack_keypair_name=""
export openstack_image_id="" # Default cartridge image id
export nova_region="<region>" # Example: RegionOne
export openstack_instance_type_tiny="<region>\/1"
export openstack_instance_type_small="<region>\/2"
export openstack_security_groups="<security-groups>"
export openstack_php_cartridge_image_id=""
export openstack_mysql_cartridge_image_id=""
export openstack_tomcat_cartridge_image_id=""


# Cassandra configuration
>>>>>>> FETCH_HEAD
# ----------------------------------------------------------------------------
export mysql_connector_jar=$stratos_packs/"mysql-connector-java-5.1.29-bin.jar" #mysql connector jar file name

export userstore_db_hostname="localhost"
export userstore_db_schema="userstore"
export userstore_db_port="3306"
export userstore_db_user="root"
export userstore_db_pass="root"


# GREG
export greg_pack_zip=$stratos_packs/"wso2greg-4.6.0.zip"
export greg_extract_path=$stratos_path/"wso2greg-4.6.0"
